name: "Allconv5_SEG"
layer {
   name: "data"
   type: "ImageSegData"
   top: "data"
   top: "seg-label"
   include {
     phase: TRAIN
   }
   transform_param {
     mirror: true
     crop_size: 224
     mean_value: 104.0
     mean_value: 117.0
     mean_value: 124.0
   }
   image_data_param {
     source: "all_shuffle_train.txt"
     batch_size: 16
     shuffle: true
     new_height: 256
     new_width: 256
   }
 }

layer {
   name: "data"
   type: "ImageSegData"
   top: "data"
   top: "seg-label"
   include {
     phase: TEST
   }
   transform_param {
     mirror: false
     crop_size: 224
     mean_value: 104.0
     mean_value: 117.0
     mean_value: 124.0
   }
   image_data_param {
     source: "all_shuffle_val.txt"
     batch_size: 16
     shuffle: false
     new_height: 224
     new_width: 224
   }
 }

layer {
  bottom: "data"
  top: "conv1"
  name: "conv1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3    
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv1"
  top: "conv1"
  name: "relu1"
  type: "ReLU"
}
layer {
  bottom: "conv1"
  top: "conv2"
  name: "conv2"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv2"
  top: "conv2"
  name: "relu2"
  type: "ReLU"
}

layer {
  bottom: "conv2"
  top: "conv3"
  name: "conv3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv3"
  top: "conv3"
  name: "relu3"
  type: "ReLU"
}
layer {
  bottom: "conv3"
  top: "conv4"
  name: "conv4"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    stride: 2
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv4"
  top: "conv4"
  name: "relu4"
  type: "ReLU"
}
layer {
  bottom: "conv4"
  top: "conv5"
  name: "conv5"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    stride: 2
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv5"
  top: "conv5"
  name: "relu5"
  type: "ReLU"
}

###--------deconvolution---------
layer {
    bottom: "conv5"
    top: "deconv5_1"
    name: "deconv5_1"
    type: "Deconvolution"
    convolution_param {
        num_output: 64
        bias_term: false
        kernel_size: 4
        stride: 2
        pad: 1
        weight_filler {
            type: "msra"
        }
	}
    param {
        lr_mult: 1.0
        decay_mult: 1
    }
}
###--------concat---------
layer {
  bottom: "conv4"
  top: "conv4_deconv"
  name: "conv4_deconv"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    stride: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv4_deconv"
  top: "conv4_deconv"
  name: "relu4_deconv"
  type: "ReLU"
}

layer {
  name: "concat1"
  type: "Concat"
  bottom: "conv4_deconv"
  bottom: "deconv5_1"
  top: "concat1"
}

###--------deconvolution---------
layer {
    bottom: "concat1"
    top: "deconv5_2"
    name: "deconv5_2"
    type: "Deconvolution"
    convolution_param {
        num_output: 32
        bias_term: false
        kernel_size: 4
        stride: 2
        pad: 1
        weight_filler {
            type: "msra"
        }
	}
    param {
        lr_mult: 1.0
        decay_mult: 1
    }
}

###--------concat---------
layer {
  bottom: "conv3"
  top: "conv3_deconv"
  name: "conv3_deconv"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 1
    stride: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv3_deconv"
  top: "conv3_deconv"
  name: "relu3_deconv"
  type: "ReLU"
}

layer {
  name: "concat2"
  type: "Concat"
  bottom: "conv3_deconv"
  bottom: "deconv5_2"
  top: "concat2"
}
###--------deconvolution---------

layer {
    bottom: "concat2"
    top: "deconv5_3"
    name: "deconv5_3"
    type: "Deconvolution"
    convolution_param {
        num_output: 16
        bias_term: false
        kernel_size: 4
        stride: 2
        pad: 1
        weight_filler {
            type: "msra"
        }
	}
    param {
        lr_mult: 1.0
        decay_mult: 1
    }
}
###--------concat---------
layer {
  bottom: "conv2"
  top: "conv2_deconv"
  name: "conv2_deconv"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    pad: 1
    stride: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv2_deconv"
  top: "conv2_deconv"
  name: "relu2_deconv"
  type: "ReLU"
}

layer {
  name: "concat3"
  type: "Concat"
  bottom: "conv2_deconv"
  bottom: "deconv5_3"
  top: "concat3"
}

###--------deconvolution---------
layer {
    bottom: "concat3"
    top: "deconv5_4"
    name: "deconv5_4"
    type: "Deconvolution"
    convolution_param {
        num_output: 8
        bias_term: false
        kernel_size: 4
        stride: 2
        pad: 1
        weight_filler {
            type: "msra"
        }
	}
    param {
        lr_mult: 1.0
        decay_mult: 1
    }
}

###--------concat---------
layer {
  bottom: "conv1"
  top: "conv1_deconv"
  name: "conv1_deconv"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 1
    stride: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv1_deconv"
  top: "conv1_deconv"
  name: "relu1_deconv"
  type: "ReLU"
}

layer {
  name: "concat4"
  type: "Concat"
  bottom: "conv1_deconv"
  bottom: "deconv5_4"
  top: "concat4"
}
###--------deconvolution---------
layer {
    bottom: "concat4"
    top: "deconv5_5"
    name: "deconv5_5"
    type: "Deconvolution"
    convolution_param {
        num_output: 2
        bias_term: false
        kernel_size: 4
        stride: 2
        pad: 1
        weight_filler {
            type: "msra"
        }
	}
    param {
        lr_mult: 1.0
        decay_mult: 1
    }
}

layer {
  bottom: "deconv5_5"
  bottom: "data"
  top: "upscore"
  name: "upscore"
  type: "Crop"
  crop_param {
    axis: 2
    offset: 0
    offset: 0
  }
}

layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "upscore"
  bottom: "seg-label"
  top: "loss"
  loss_param {
    ignore_label: 255
  }
  include: { phase: TEST}
  include: { phase: TRAIN}
}

layer {
  name: "seg-loss-acc"
  type: "Accuracy"
  bottom: "upscore"
  bottom: "seg-label"
  top: "seg-loss-acc"
  accuracy_param {
    ignore_label: 255
  }
  include: { phase: TEST}
  include: { phase: TRAIN}
}





